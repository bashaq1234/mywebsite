const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const mongoose = require('mongoose');
const FormData = require('./formDataModel'); // Import the FormData model from formDataModel.js

const PORT = process.env.PORT || 5000;

// Middleware
const app = express();
app.use(bodyParser.json());

// Define CORS options
const corsOptions = {
  origin: '*', // Allow requests from any origin for now, can be modified as needed
  methods: ['GET', 'POST'], // Specify the allowed HTTP methods
  allowedHeaders: ['Content-Type', 'Authorization'], // Specify the allowed headers
  credentials: true, // Enable credentials (cookies, authorization headers, etc.)
  preflightContinue: false, // Disable preflight requests caching
  optionsSuccessStatus: 200 // Set the successful response status for OPTIONS requests
};

// Use cors middleware with custom options
app.use(cors(corsOptions));

// MongoDB connection
mongoose.connect('mongodb://127.0.0.1:27017/UserRegistration', { useNewUrlParser: true, useUnifiedTopology: true });
const db = mongoose.connection;
db.on('error', console.error.bind(console, 'MongoDB connection error:'));
db.once('open', () => console.log('Connected to MongoDB'));

// Route to handle form submission
app.post('/submit', async (req, res) => {
  try {
    // Extract the Origin header from the request
    const origin = req.get('Origin');
    console.log('Request Origin:', origin);

    // Process the form data
    const { firstName, surname, department, time } = req.body;
    const formData = new FormData({
      firstName,
      surname,
      department,
      time
    });
    await formData.save();
    
    res.status(200).json({ message: 'Form data saved successfully' });
  } catch (error) {
    console.error('Error submitting form:', error);
    res.status(500).json({ error: 'An error occurred while processing your request' });
  }
});

// Start the server
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
